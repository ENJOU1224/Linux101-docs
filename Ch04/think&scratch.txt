#本文档不在任何链接内，仅作思考记录
##这是一个理想状态，没有实现也没有关系。当然我会在协商约定框架下尽可能像这个方向靠拢。
- 对听众的定位，对所讲内容的定位：
    - 听众分析：
        - 一种情况是仅仅将Linux作为工具使用<←目的>的听众，此时他们很快就会发现，听讲座着实不如百度，因为文字资料定向性更强，且可复现。
    而讲座则反之。（有讲义文档当然好一些，但同时要清楚其定位问题。）（第一堂课左右消失主体）
        - 第二种是对技术本身好奇<←目的>，但没有任何计算机组成概念的，此时他们很快就被劝退，因为语言不通，待着也是木桩，退了吧。然而这
    些才是我们的潜力听众（coherent），要通过一步一步引导保持兴趣。（后继课程流失主体）
        - 第三种是同样对技术好奇，且对计算机有一定基础概念，查找信息渠道多样的人（我）。可能对一些技术上的细节不清楚，但可以用基本功消化
    吸收课堂内容，收益最大，但人数少。（最后留下的人，一般有技术情怀）
        - 第四种，巨佬：讲的没有学的快，溜了溜了。
    - 对策：
        - 宣传时表明我们的“授课对象”。
        - 课程开始之前一段时间（宣传同时），（有可能的话）调查并统计水平。（我目前有一个demo，很简陋就是）（推荐以后的小聚也是讲师预先
    向问卷模板填问题，了解听众程度之后再讲解，也提醒听众应该准备什么。）
        - 讲义分层结构，如下。
        - 正式授课？ 要可能的话根据调查内容调整，


- 我所正在实践的结构：
    - 第零步概念普及，力图以最日常的比喻来引入避不开的概念，如操作系统等。（0.md）
    - 第一步引入，隐藏名词概念细节，使全文在较少概念下保持连贯，不造成误解。（对应隐藏模式，该模式下隐藏补充内容文档，隐藏行文中深层概
    念及解释，并折叠所有可折叠选项。新手易于了解概貌，同时为点到为止，不想深究的人提供方便。
    - 第二步展开，粗略地引入一些现象背后的原理，指出拓展技术细节（对应显示模式，显示以上被隐藏的内容和一些原理性实验，进一步探索原因。）
    - 第三步延申，由链接完成。做好铺垫后，将读者引向更专业的解释，完成Linux引路工作。

- 一些个人感言：
    - 我之所以选择进程这里，其实我没有进修过操作系统，但还是听过mooc，看过（但由于底层理解原因无法看完）相关的书，觉得当时没有理解是一
    个遗憾。于是我想通过讲解来透彻了解。
    - 随后就是lug相关，进入lug后感觉社团整体是一个相当自然的氛围，有相当大的成长空间，更不用说社团其他成员对我的关注信赖。所以一直在想
    能否从受益者变成贡献者，回归“软件自由之三”呢？
    - 加入这项计划的另一个原因是听到金孜达学长说来听的人越来越少，看到从前讲义意识到：虽然之前101以引导入门为宗旨，但听懂的硬性要求却不
    低。一些操作不懂原理介绍许多终归忘记。同时想到如果讲课是介绍式布局，那么就不如网上的资料和man手册。（当然，从前的讲义就计划有实验，本
    身应当肯定。而且讲义从连贯性上是值得肯定的）所以我想以一个听众的感受带入参与整个计划，改善其听众参与性。
    - 我采用通俗理解与显然论证（实验）结合的方式组织负责的部分。（比如进程与htop使用交叉介绍，介绍父子进程关系，直接按‘t'显示进程树，
    添加PPID属性论证其正确性。）但由于进程是操作系统核心，特性肯定复杂，需要把握度，一方面不能讲成操作系统导论，另一方面不能只给操作不
    介绍原理，会很苍白，所以粗略介绍进程的一个特性就需要一个示例，同时思考拓展时应该给什么链接材料。
    - 可是每编写一个条目就会思考：这个特性有什么意义？Linux父子进程关系有什么用途（waitpid之类），难道是看着好玩吗？没有这个特性的Windows
    难道不能实现类似操作吗？如果能，如何表明Linux这个特性的意义？（还是我经历太少吧）
    - 遇到一个可能的新概念，我是在正文里介绍？还是补充内容介绍？还是添加到导航（0.md）里介绍？加入隐藏模式吗？
    - 更有甚者，需要冲破概念误区，而且正确答案不容易找到。
        - 比如shell退出（用户退出）之后后台进程的行为，shell退出只会给前台进程组发送
    SIGHUP，默认退出。那么后台进程呢？本机实验————一个靶机（init）：作为孤儿进程挂在init下。那ssh呢？主机连接该靶机：也是挂在init下。
    ？？那要nohup干啥？直接丢后台得了呗。
        - 然后戏剧性的问题是：Ubuntu桌面环境（systemd），ping挂在后台关terminal，注销。换terminal发现ping现在挂在。。systemd --user
        （非root用户） 上？没有挂在systemd上，什么意思？一会后该父进程随着用户注销消失，带着ping命令一起消失了。难道又收到退出信号？
        于是拿出屏蔽信号（SIGTERM, SIGHUP）无限睡眠演示程序同样操作，结果用户注销该进程一定消失，应该是被kill -9了。。但是无论是ssh
        还是tty，后台进程都牢牢挂在根systemd上，看来只有桌面的虚拟终端服从图形界面的规则。。。那桌面环境使用nohup呢？注销后直接到进程
        根程序上了。（突然发现PID等于1的居然还是init？但系统里有systemd啊，怎么做到的？）
    - 然而解决完问题却还要想，这么复杂的情况，有讲的必要吗？是不是太细节了？可是不说又明显与已知内容冲突···一直在纠结啊。
    - 感觉是预料到内容多，但发现考验在组织内容上呢，如果真正想细心准备好，不投入时间是不可能的。17号，相当于开学。虽然时间被挤兑，但也许
    状态可以更好一些也说不定。总之，继续加油，不大可能及时开课的话就把讲义设计好吧。

                                                                                                      2020.2.17
                                                                                                  第四章负责人：刘隆邦
另：git使用额外分支了吗，由于每次都是重复git pull 和 git push，可能造成麻烦，改日应当请教一下。